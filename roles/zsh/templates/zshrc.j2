# {{ ansible_managed }}

export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_CACHE_HOME="$HOME/.cache"

[[ ! -d $XDG_CACHE_HOME/zsh ]] && mkdir "${XDG_CACHE_HOME}/zsh"
[[ ! -d $XDG_STATE_HOME/zsh ]] && mkdir "${XDG_STATE_HOME}/zsh"

# Lines configured by zsh-newuser-install
HISTFILE="${XDG_STATE_HOME}/zsh/history"
HISTSIZE=500000
SAVEHIST=500000
setopt appendhistory autocd
bindkey -e
# End of lines configured by zsh-newuser-install

# The following lines were added by compinstall
zstyle :compinstall filename '{{ ansible_user_dir }}/.zshrc'

autoload -Uz compinit
compinit -d "${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
# End of lines added by compinstall

{% if ansible_os_family == "Darwin" and ansible_architecture == "arm64" %}
eval "$(/opt/homebrew/bin/brew shellenv)"
{% elif ansible_os_family == "Darwin" and ansible_architecture == "x86_64" %}
eval "$(/usr/local/bin/brew shellenv)"
{% endif %}

{% if ansible_os_family == "Darwin" %}
export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR="${HOMEBREW_PREFIX}/share/zsh-syntax-highlighting/highlighters"
source "${HOMEBREW_PREFIX}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source "${HOMEBREW_PREFIX}/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
{% elif ansible_os_family == "Archlinux" %}
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
{% elif ansible_os_family == "Debian"  %}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% endif %}

source {{ ansible_user_dir }}/.local/share/zsh/abbr/zsh-abbr.zsh
source {{ ansible_user_dir }}/.local/share/zsh/autosuggestions-abbr/zsh-autosuggestions-abbreviations-strategy.zsh
export ZSH_AUTOSUGGEST_STRATEGY=(abbreviations $ZSH_AUTOSUGGEST_STRATEGY)

source {{ ansible_user_dir }}/.local/share/zsh/grml/etc/zsh/zshrc

{% if ansible_os_family == "Archlinux" %}
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
{% elif ansible_os_family == "Darwin" %}
source "${HOMEBREW_PREFIX}/share/powerlevel10k/powerlevel10k.zsh-theme"
{% else %}
source {{ ansible_user_dir }}/.local/share/zsh/powerlevel10k/powerlevel10k.zsh-theme
{% endif %}

# take some of the good parts of oh-my-zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/lib/clipboard.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/copybuffer/copybuffer.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/copypath/copypath.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/copyfile/copyfile.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/cp/cp.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/isodate/isodate.plugin.zsh
# source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/nmap/nmap.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/rake/rake.plugin.zsh
# source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/rsync/rsync.plugin.zsh
source {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh/plugins/urltools/urltools.plugin.zsh

export EDITOR=vim

{% if ansible_os_family == "Darwin" %}
export PATH="${HOMEBREW_PREFIX}/bin:$PATH"
{% endif %}

if [[ -d "$HOME/bin" ]]; then
  export PATH="$HOME/bin:$PATH"
fi

{% if ansible_os_family == "Darwin" and mtype == "personal" %}
if [[ -d "$HOME/.docker/bin" ]]; then
  export PATH="$HOME/.docker/bin":$PATH
fi
{% endif %}

{% if ansible_os_family == "Darwin" %}
if [[ -e "${HOMEBREW_PREFIX}/opt/ruby/bin" ]]; then
  export PATH="${HOMEBREW_PREFIX}/opt/ruby/bin:$PATH"
fi
{% endif %}

function unlockmf() {
  gpg -qd {{ playbook_dir }}/roles/zsh/files/36FDA306.asc > /dev/null
}

function unlockw() {
  gpg -qd {{ playbook_dir }}/roles/zsh/files/4DA7BCBA.asc > /dev/null
}

export BAT_THEME="Monokai Extended"
# https://github.com/sharkdp/bat#git-diff
function batdiff() {
  git diff --name-only --diff-filter=d | xargs bat --diff
}

# https://github.com/sharkdp/vivid
if command -v vivid > /dev/null 2>&1; then
  export LS_COLORS="$(vivid generate solarized-dark)"
fi

{% if ansible_os_family == "Darwin" %}
if [[ -f $HOMEBREW_PREFIX/bin/lsd ]]; then
  # we have lsd installed... use it
  alias ls="$HOMEBREW_PREFIX/bin/lsd"
elif [[ -f $HOMEBREW_PREFIX/bin/gls ]]; then
  # Use GNU coreutils ls if it's installed on osx
  alias ls="gls --color"
else
  alias ls="ls --color"
fi
{% else %}
if [[ -f /usr/bin/lsd ]]; then
  alias ls=/usr/bin/lsd
else
  alias ls="ls --color"
fi
{% endif %}

alias please='eval "sudo $(fc -ln -1)"'

{% if ansible_system == "Linux" %}
alias open='xdg-open'

if [[ -e /usr/bin/bsdtar ]]; then
  alias gtar=/usr/bin/tar
  alias tar=/usr/bin/bsdtar
fi
{% endif %}

if command -v thefuck > /dev/null 2>&1; then
  eval "$(thefuck --alias)"
fi

if command -v shfmt > /dev/null 2>&1; then
  alias mshfmt='shfmt -s -i 2 -ci -sr'
fi

if command -v zoxide > /dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

if command -v fzf > /dev/null 2>&1; then
  FZF_ALT_C_COMMAND= source <(fzf --zsh)
  export FZF_DEFAULT_COMMAND='fd -H --type f'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_CTRL_R_OPTS='--reverse'
fi

if command -v mise > /dev/null 2>&1; then
  eval "$(mise activate zsh)"
fi

{% if ansible_os_family == "Darwin" %}
# disable homebrew analytics
export HOMEBREW_NO_ANALYTICS=1
{% endif %}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.config/zsh/p10k.zsh ]] || source ~/.config/zsh/p10k.zsh

{% if mtype == 'work' and wedition == 'facile' %}
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
{% endif %}

{% if mtype != "server" %}
export POCKET_PORTAL_INGEST_URL={{ zsh_pocket_portal_ingest_url  }}
export POCKET_PORTAL_INGEST_TOKEN='{{ zsh_pocket_portal_ingest_token  }}'
{% endif %}

{% if mtype == "personal" %}
export CLOUDFLARE_API_TOKEN={{ zsh_cloudflare_api_token }}
export CFCA_TOKEN={{ zsh_cloudflare_ca_token }}
export CF_TOKEN={{ zsh_cloudflare_global_api_key }}
export DIGITALOCEAN_ACCESS_TOKEN={{ zsh_digitalocean_token }}
export GITHUB_TOKEN={{ zsh_github_token }}
export NEW_RELIC_ACCOUNT_ID={{ zsh_newrelic_account_id }}
export NEW_RELIC_API_KEY={{ zsh_newrelic_api_key }}
export VULTR_API_KEY={{ zsh_vultr_api_key }}
{% endif %}

{% if ansible_os_family == "Darwin" and mtype == "personal" %}
if [[ -f ${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ]]; then
  export CLOUDSDK_PYTHON="${HOMEBREW_PREFIX}/opt/python@3.12/libexec/bin/python"
  source "${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
  source "${HOMEBREW_PREFIX}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
fi
{% endif %}

{% if mtype == "work" and ansible_os_family == "Debian" %}
if [[ -f /usr/local/share/java/bfg.jar ]]; then
  alias bfg='java -jar /usr/local/share/java/bfg.jar'
fi
{% endif %}

{% if ansible_os_family == "Debian" %}
export DEBFULLNAME="Mario Finelli"
export DEBEMAIL="ubuntu@mroml.com"
{% endif %}

source "{{ playbook_dir }}/roles/zsh/files/oneliners.zsh"

function certexp() {
  openssl x509 -text -noout -in "$1" | grep Not\ After
}

{% for gfa in zsh_gist_function_aliases %}
if [[ -f "{{ ansible_user_dir }}/.local/share/zsh/gists/{{ gfa.alias }}/{{ gfa.filename }}" ]]; then
  alias {{ gfa.alias }}="{{ ansible_user_dir }}/.local/share/zsh/gists/{{ gfa.alias }}/{{ gfa.filename }}"
fi

{% endfor %}

{% if ansible_os_family == "Archlinux" %}
# https://wiki.archlinux.org/title/GNOME/Keyring#Setup_gcr
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/gcr/ssh"
{% endif %}

{% if ansible_os_family == "Archlinux" %}
# "standard" chroot
# create: mkarchroot $CHROOT/root base-devel
# update: arch-nspawn $CHROOT/root pacman -Syu
export CHROOT=$HOME/.local/var/chroot
# supermario chroot with pkgs.finelli.dev enabled
# create: mkarchroot -C /etc/pacman.conf $SMCHROOT/root base-devel
# update: arch-nspawn $SMCHROOT/root pacman -Syu
export SMCHROOT=$HOME/.local/var/smchroot
{% endif %}

# xdg-ninja fixes
export ANSIBLE_HOME="${XDG_DATA_HOME}/ansible"
export AWS_SHARED_CREDENTIALS_FILE="${XDG_CONFIG_HOME}/aws/credentials"
export AWS_CONFIG_FILE="${XDG_CONFIG_HOME}/aws/config"
export AZURE_CONFIG_DIR="${XDG_DATA_HOME}/azure"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
export GOPATH="${XDG_DATA_HOME}/go"
export NODE_REPL_HISTORY="${XDG_STATE_HOME}/node_repl_history"
export NPM_CONFIG_INIT_MODULE="${XDG_CONFIG_HOME}/npm/config/npm-init.js"
export NPM_CONFIG_CACHE="${XDG_CACHE_HOME}/npm"
export MYSQL_HISTFILE="${XDG_DATA_HOME}/mysql_history"
export PYTHON_HISTORY="${XDG_DATA_HOME}/python_history"
export FLY_CONFIG_DIR="${XDG_STATE_HOME}/fly"
export BUNDLE_USER_CONFIG="${XDG_CONFIG_HOME}/bundle"
export BUNDLE_USER_CACHE="${XDG_CACHE_HOME}/bundle"
export BUNDLE_USER_PLUGIN="${XDG_DATA_HOME}/bundle"
export PSQL_HISTORY="${XDG_STATE_HOME}/psql_history"
export SQLITE_HISTORY="${XDG_CACHE_HOME}/sqlite_history"
export REDISCLI_HISTFILE="${XDG_STATE_HOME}/redis/rediscli_history"
alias wget="wget --hsts-file=$XDG_DATA_HOME/wget-hsts"

{% if ansible_os_family == "Darwin" %}
export SHELL_SESSIONS_DISABLE=1
{% endif %}

alias irssi=irssi --config="$XDG_CONFIG_HOME/irssi/config" \
  --home="$XDG_DATA_HOME/irssi"

# vim: ft=zsh.jinja2
