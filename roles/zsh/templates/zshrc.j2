# {{ ansible_managed }}

# Lines configured by zsh-newuser-install
HISTFILE=~/.zhistfile
HISTSIZE=100000
SAVEHIST=100000
setopt appendhistory autocd
bindkey -e
# End of lines configured by zsh-newuser-install

# The following lines were added by compinstall
zstyle :compinstall filename '{{ ansible_user_dir }}/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

{% if ansible_os_family == "Darwin" %}
export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR=/usr/local/share/zsh-syntax-highlighting/highlighters
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% elif ansible_os_family == "Archlinux" %}
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
{% elif ansible_os_family == "Debian"  %}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% endif %}

source {{ ansible_user_dir }}/.zsh/grml/etc/zsh/zshrc
{% if ansible_os_family == "Archlinux" %}
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme
{% else %}
source {{ ansible_user_dir }}/.zsh/powerlevel10k/powerlevel10k.zsh-theme
{% endif %}

# take some of the good parts of oh-my-zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/lib/clipboard.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/copybuffer/copybuffer.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/copydir/copydir.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/copyfile/copyfile.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/cp/cp.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/isodate/isodate.plugin.zsh
# source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/nmap/nmap.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/rake/rake.plugin.zsh
# source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/rsync/rsync.plugin.zsh
source {{ ansible_user_dir }}/.zsh/ohmyzsh/plugins/urltools/urltools.plugin.zsh

export EDITOR=vim

if [[ -d "$HOME/bin" ]]; then
  export PATH="$HOME/bin":$PATH
fi

if [[ -d "$HOME/src/go" ]]; then
  export GOPATH="$HOME/src/go"
fi

export N_PREFIX="$HOME/.n"
if [[ -d "$HOME/.n/bin" ]]; then
  export PATH="$HOME/.n/bin":$PATH
fi

function unlockmf() {
  gpg -qd ~/.zsh/36FDA306.asc > /dev/null
}

function unlockw() {
  gpg -qd ~/.zsh/4DA7BCBA.asc > /dev/null
}

export BAT_THEME="Monokai Extended"
# https://github.com/sharkdp/bat#git-diff
function batdiff() {
  git diff --name-only --diff-filter=d | xargs bat --diff
}

# https://github.com/sharkdp/vivid
if command -v vivid > /dev/null 2>&1; then
  export LS_COLORS="$(vivid generate solarized-dark)"
fi

{% if ansible_os_family == "Darwin" %}
# Use GNU coreutils ls if it's installed on osx
if [[ -f /usr/local/bin/gls ]]; then
  alias ls="gls --color"
fi
{% else %}
alias ls="ls --color"
{% endif %}

alias please='eval "sudo $(fc -ln -1)"'

if command -v thefuck > /dev/null 2>&1; then
  eval "$(thefuck --alias)"
fi

if command -v shfmt > /dev/null 2>&1; then
  alias mshfmt='shfmt -s -i 2 -ci -sr'
fi

if command -v zoxide > /dev/null 2>&1; then
  eval "$(zoxide init zsh)"
fi

{% if ansible_os_family == "Darwin" %}
if [[ -f /usr/local/share/chruby/chruby.sh ]]; then
  source /usr/local/share/chruby/chruby.sh
fi

if [[ -f /usr/local/opt/fzf/shell/key-bindings.zsh ]]; then
  source /usr/local/opt/fzf/shell/key-bindings.zsh
fi
{% else %}
if [[ -f /usr/share/chruby/chruby.sh ]]; then
  source /usr/share/chruby/chruby.sh
fi

if [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
  # archlinux
  source /usr/share/fzf/key-bindings.zsh
elif [[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]]; then
  # debian
  source /usr/share/doc/fzf/examples/key-bindings.zsh
fi
{% endif %}

export FZF_DEFAULT_COMMAND='fd -H --type f'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_R_OPTS='--reverse'

{% if ansible_os_family == "Darwin" %}
# disable homebrew analytics
export HOMEBREW_NO_ANALYTICS=1
{% endif %}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

{% if mtype == "personal" %}
export CLOUDFLARE_API_TOKEN={{ cloudflare_api_token }}
export CFCA_TOKEN={{ cloudflare_ca_token }}
export CF_TOKEN={{ cloudflare_global_api_key }}
export DIGITALOCEAN_ACCESS_TOKEN={{ digitalocean_token }}
export GITHUB_TOKEN={{ github_token }}
export NEW_RELIC_ACCOUNT_ID={{ newrelic_account_id }}
export NEW_RELIC_API_KEY={{ newrelic_api_key }}
export VULTR_API_KEY={{ vultr_api_key }}
{% endif %}

{% if ansible_os_family == "Darwin" and mtype == "personal" %}
if [[ -f /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ]]; then
  export CLOUDSDK_PYTHON=/usr/local/opt/python@3.8/libexec/bin/python
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi
{% endif %}

{% if mtype == "work" %}
if [[ -f /usr/local/share/java/bfg.jar ]]; then
  alias bfg='java -jar /usr/local/share/java/bfg.jar'
fi
{% endif %}

function jumpbox() {
  kubectl -n jumpbox exec -it \
    "$(kubectl -n jumpbox get pods | grep -m1 Running | awk '{print $1}')" \
    -- /bin/bash
}

{% for gfa in gist_function_aliases %}
if [[ -f "{{ ansible_user_dir }}/.zsh/_functions/{{ gfa.alias }}/{{ gfa.filename }}" ]]; then
  alias {{ gfa.alias }}="{{ ansible_user_dir }}/.zsh/_functions/{{ gfa.alias }}/{{ gfa.filename }}"
fi

{% endfor %}

{% if ansible_os_family == "Archlinux" %}
# "standard" chroot
# mkarchroot $CHROOT/root base-devel
export CHROOT=$HOME/chroot
# supermario chroot with pkgs.finelli.dev enabled
# mkarchroot -C /etc/pacman.conf $SMCHROOT/root base-devel
export SMCHROOT=$HOME/smchroot
{% endif %}

# vim: ft=zsh.jinja2
