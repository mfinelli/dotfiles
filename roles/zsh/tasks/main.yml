---
- name: Creating zsh configuration directory
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ ansible_user_dir }}/.zsh" # TODO: remove
    - "{{ ansible_user_dir }}/.cache/zsh"
    - "{{ ansible_user_dir }}/.config/zsh"
    - "{{ ansible_user_dir }}/.local/share/zsh"

- name: Installing grml-zsh-config
  ansible.builtin.git:
    dest: "{{ ansible_user_dir }}/.local/share/zsh/grml"
    repo: https://github.com/grml/grml-etc-core.git
    version: v0.19.24

- name: Installing zsh-abbr
  ansible.builtin.git:
    dest: "{{ ansible_user_dir }}/.local/share/zsh/abbr"
    repo: https://github.com/olets/zsh-abbr.git
    version: v6.3.3

- name: Installing zsh suggestions abbr-strategy
  ansible.builtin.git:
    dest: "{{ ansible_user_dir }}/.local/share/zsh/autosuggestions-abbr"
    repo: >-
      https://github.com/olets/zsh-autosuggestions-abbreviations-strategy.git
    version: v1.1.2

- name: Installing powerlevel10k
  ansible.builtin.git:
    dest: "{{ ansible_user_dir }}/.local/share/zsh/powerlevel10k"
    repo: https://github.com/romkatv/powerlevel10k.git
    version: 36f3045d69d1ba402db09d09eb12b42eebe0fa3b # v1.20.15

# https://stackoverflow.com/a/41029655
- name: Installing oh-my-zsh # noqa command-instead-of-module
  ansible.builtin.command:
    cmd: >-
      git clone --config fetch.fsckObjects=false --config
      receive.fsckObjects=false --config transfer.fsckObjects=false
      https://github.com/ohmyzsh/ohmyzsh.git
      {{ ansible_user_dir }}/.local/share/zsh/ohmyzsh
    creates: "{{ ansible_user_dir }}/.local/share/zsh/ohmyzsh"

# i'd prefer this to be a symlink but then we miss out on ansible being able
# to process it, run if/else, and drop in encrypted variables...
- name: Copying zsh configuration
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.zshrc"
    group: "{{ whoami_group }}"
    mode: "0600"
    owner: "{{ whoami }}"
    src: zshrc.j2

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Linking p10k configuration
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.config/zsh/p10k.zsh"
    src: "{{ playbook_dir }}/roles/zsh/files/p10k.zsh"
    state: link

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Linking dummy file for the "unlockmf" function
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.zsh/36FDA306.asc"
    src: "{{ playbook_dir }}/roles/zsh/files/36FDA306.asc"
    state: link

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Linking the dummy file for the "unlockw" function
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.zsh/4DA7BCBA.asc"
    src: "{{ playbook_dir }}/roles/zsh/files/4DA7BCBA.asc"
    state: link

- name: Configuring gist aliases
  ansible.builtin.import_tasks: functions.yml

- name: Configuring other shell-related tools
  ansible.builtin.import_tasks: other.yml
