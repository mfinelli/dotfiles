---
- name: Creating autostart directory
  when: ansible_os_family != 'Darwin'
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ ansible_user_dir }}/.config/autostart"
    state: directory

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Linking keymapper configuration
  when: ansible_os_family != 'Darwin'
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.config/keymapper.conf"
    src: "{{ playbook_dir }}/roles/other/files/keymapper.conf"
    state: link

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Linking keymapper autostart override (--no-tray)
  when: ansible_os_family != 'Darwin'
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/.config/autostart/keymapper.desktop"
    src: "{{ playbook_dir }}/roles/other/files/keymapper.desktop"
    state: link

- name: Creating RaspberryPi Imager configuration directory
  when: ansible_os_family != 'Darwin'
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ ansible_user_dir }}/.config/Raspberry Pi"
    state: directory

- name: Copying RaspberryPi Imager configuration
  when: ansible_os_family != 'Darwin'
  ansible.builtin.copy:
    dest: "{{ ansible_user_dir }}/.config/Raspberry Pi/Imager.conf"
    group: "{{ whoami_group }}"
    mode: "0644"
    owner: "{{ whoami }}"
    src: imager.conf

- name: Creating libvirt machine images directory
  when: ansible_os_family == 'Archlinux' and mtype != 'server'
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ ansible_user_dir }}/.local/{{ item }}"
    state: directory
  loop:
    - var
    - var/libvirt

- name: Creating bin directory in $HOME
  when: mtype != 'server'
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ ansible_user_dir }}/bin"
    state: directory

# this is ok, because boostrap.bash calls dotfiles.yml as the playbook
- name: Copying pocket portal submit script
  when: mtype != 'server'
  ansible.builtin.file:
    dest: "{{ ansible_user_dir }}/bin/ppq"
    src: "{{ playbook_dir }}/roles/other/files/ppqsubmit.py"
    state: link

- name: Creating irssi directories
  when: mtype != 'server'
  ansible.builtin.file:
    group: "{{ whoami_group }}"
    mode: "0755"
    owner: "{{ whoami }}"
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ ansible_user_dir }}/.config/irssi"
    - "{{ ansible_user_dir }}/.local/share/irssi"

- name: Copying irssi configuration
  when: mtype != 'server'
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.config/irssi/config"
    group: "{{ whoami_group }}"
    mode: "0600"
    owner: "{{ whoami }}"
    src: irssi.config.j2
